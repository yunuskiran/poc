{"version":3,"file":"static/js/941.28d4feb2.chunk.js","mappings":"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","sources":["core/components/BoxedLayout.tsx","auth/pages/Login.tsx","core/components/SettingsDrawer.tsx","core/config/layout.ts"],"sourcesContent":["import {\n  AppBar,\n  Box,\n  Container,\n  GlobalStyles,\n  IconButton,\n  useTheme,\n  Toolbar,\n} from \"@mui/material\";\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport React, { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport SettingsDrawer from \"./SettingsDrawer\";\n\ntype BoxedLayoutProps = {\n  children: React.ReactNode;\n};\n\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const handleSettingsToggle = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <GlobalStyles\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\n      />\n      <AppBar color=\"transparent\" position=\"relative\">\n        <Toolbar>\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton\n            aria-label=\"settings\"\n            component=\"span\"\n            onClick={handleSettingsToggle}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Logo sx={{ mb: 2 }} />\n          {children}\n          <Box>\n            <SettingsDrawer\n              onDrawerToggle={handleSettingsToggle}\n              open={settingsOpen}\n            />\n          </Box>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default BoxedLayout;\n","import { Box, Grid, Paper, TextField, Typography } from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\nimport { useAuth } from \"../contexts/AuthProvider\";\n\nconst Login = () => {\n  const { isLoggingIn, login } = useAuth();\n  const navigate = useNavigate();\n  const snackbar = useSnackbar();\n  const { t } = useTranslation();\n\n  const handleLogin = (email: string, password: string) => {\n    login(email, password)\n      .then(() => navigate(`/onemap`, { replace: true }))\n      .catch(() => snackbar.error(t(\"common.errors.unexpected.subTitle\")));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"demo@example.com\",\n      password: \"guWEK<'r/-47-XG3\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(t(\"common.validations.email\"))\n        .required(t(\"common.validations.required\")),\n      password: Yup.string()\n        .min(8, t(\"common.validations.min\", { size: 8 }))\n        .required(t(\"common.validations.required\"))\n    }),\n    onSubmit: (values) => handleLogin(values.email, values.password)\n  });\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: \"url(./img/startup.svg)\",\n          backgroundRepeat: \"no-repeat\",\n          bgcolor: \"background.default\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} square>\n        <BoxedLayout>\n          <Typography component=\"h1\" variant=\"h5\">\n            {t(\"auth.login.title\")}\n          </Typography>\n          <Box\n            component=\"form\"\n            marginTop={3}\n            noValidate\n            onSubmit={formik.handleSubmit}\n          >\n            <TextField\n              margin=\"normal\"\n              variant=\"filled\"\n              required\n              fullWidth\n              id=\"email\"\n              label={t(\"auth.login.form.email.label\")}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              disabled={isLoggingIn}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"filled\"\n              required\n              fullWidth\n              name=\"password\"\n              label={t(\"auth.login.form.password.label\")}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              disabled={isLoggingIn}\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n            <LoadingButton\n              type=\"submit\"\n              fullWidth\n              loading={isLoggingIn}\n              variant=\"contained\"\n              sx={{ mt: 3 }}\n            >\n              {t(\"auth.login.submit\")}\n            </LoadingButton>\n          </Box>\n        </BoxedLayout>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import {\n  Box,\n  Drawer,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useTranslation } from \"react-i18next\";\nimport { drawerWidth } from \"../config/layout\";\nimport { useSettings } from \"../contexts/SettingsProvider\";\n\ntype SettingsDrawerProps = {\n  onDrawerToggle: () => void;\n  open: boolean;\n};\n\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\n  const {\n    changeCollapsed,\n    changeDirection,\n    changeMode,\n    collapsed,\n    direction,\n    mode,\n  } = useSettings();\n  const { i18n, t } = useTranslation();\n\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\n    changeDirection(direction);\n  };\n\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\n  };\n\n  const handleModeChange = (_: any, mode: string) => {\n    changeMode(mode);\n  };\n\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\n    changeCollapsed(collapsed);\n  };\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      open={open}\n      onClose={onDrawerToggle}\n      sx={{\n        \"& .MuiDrawer-paper\": {\n          width: drawerWidth,\n        },\n      }}\n      variant=\"temporary\"\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          p: 2,\n        }}\n      >\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n      <Box sx={{ pl: 2, pr: 2 }}>\n        <Typography\n          gutterBottom\n          id=\"settings-language\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.language.label\")}\n        </Typography>\n        <FormControl>\n          <RadioGroup\n            aria-label=\"language\"\n            name=\"language-radio-group\"\n            onChange={handleLanguageChange}\n            value={i18n.language}\n          >\n            <FormControlLabel\n              value=\"en\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.en\").toString()}\n            />\n            <FormControlLabel\n              value=\"tr\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.tr\").toString()}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.mode.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={mode}\n          exclusive\n          fullWidth\n          onChange={handleModeChange}\n        >\n          <ToggleButton value=\"light\">\n            {t(\"settings.drawer.mode.options.light\")}\n          </ToggleButton>\n          <ToggleButton value=\"dark\">\n            {t(\"settings.drawer.mode.options.dark\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.direction.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={direction}\n          exclusive\n          fullWidth\n          onChange={handleDirectionChange}\n        >\n          <ToggleButton value=\"ltr\">\n            {t(\"settings.drawer.direction.options.ltr\")}\n          </ToggleButton>\n          <ToggleButton value=\"rtl\">\n            {t(\"settings.drawer.direction.options.rtl\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n        <Typography\n          gutterBottom\n          id=\"settings-sidebar\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.sidebar.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={collapsed}\n          exclusive\n          fullWidth\n          onChange={handleSidebarChange}\n        >\n          <ToggleButton value={true}>\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\n          </ToggleButton>\n          <ToggleButton value={false}>\n            {t(\"settings.drawer.sidebar.options.full\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default SettingsDrawer;\n","export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n"],"names":["children","theme","useTheme","useState","settingsOpen","setSettingsOpen","handleSettingsToggle","GlobalStyles","styles","body","backgroundColor","palette","background","paper","AppBar","color","position","Toolbar","Box","sx","flexGrow","IconButton","component","onClick","Settings","Container","maxWidth","mt","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","useAuth","isLoggingIn","login","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","size","onSubmit","values","then","replace","catch","error","Grid","container","height","item","xs","sm","md","backgroundImage","backgroundRepeat","bgcolor","backgroundSize","backgroundPosition","Paper","square","Typography","variant","marginTop","noValidate","handleSubmit","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","disabled","value","onChange","handleChange","touched","Boolean","errors","helperText","type","LoadingButton","loading","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","i18n","anchor","onClose","width","drawerWidth","justifyContent","p","edge","pl","pr","gutterBottom","event","changeLanguage","target","language","control","toString","exclusive","_","drawerCollapsedWidth"],"sourceRoot":""}